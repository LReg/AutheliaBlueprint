version: '3'

services:
  authelia:
    image: authelia/authelia
    container_name: ${APP_NAME}-authelia
    volumes:
      - ./docker/volumes/authelia/config:/config
    networks:
      - TraefikNetwork
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.${APP_NAME}-router-authelia.rule=Host(`${AUTH_DOMAIN}`)'
      - 'traefik.http.routers.${APP_NAME}-router-authelia.entrypoints=${TRAEFIK_ENTRYPOINT}'
      - 'traefik.http.routers.${APP_NAME}-router-authelia.tls=true'
      - 'traefik.http.routers.${APP_NAME}-router-authelia.tls.certresolver=${TRAEFIK_CERT_RESOLVER}'
      - 'traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/verify?rd=https://${AUTH_DOMAIN}'
      - 'traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true'
      - 'traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email'
    expose:
      - 9091
    restart: always
    environment:
      - TZ=CET
      - "AUTHELIA_ACCESS_CONTROL_DEFAULT_POLICY=deny"
      - "X_AUTHELIA_CONFIG_FILTERS=template"

  authelia-lldap:
    image: lldap/lldap:stable
    container_name: ${APP_NAME}-authelia-lldap
    restart: always
    networks:
        - TraefikNetwork
    expose:
        - 17170
        - 6360
        - 3890
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.${APP_NAME}-router-lldap.rule=Host(`${LLDAP_DOMAIN}`)'
      - 'traefik.http.routers.${APP_NAME}-router-lldap.entrypoints=${TRAEFIK_ENTRYPOINT}'
      - 'traefik.http.routers.${APP_NAME}-router-lldap.tls=true'
      - 'traefik.http.routers.${APP_NAME}-router-lldap.tls.certresolver=${TRAEFIK_CERT_RESOLVER}'
      - 'traefik.http.services.${APP_NAME}-service.loadbalancer.server.port=17170'
    volumes:
      - "./docker/volumes/lldap:/data"
    environment:
      - "LLDAP_JWT_SECRET=${LLDAP_JWT_SECRET}"
      - "LLDAP_KEY_SEED=${LLDAP_KEY_SEED}"
      - "LLDAP_LDAP_BASE_DN=dc=${LLDAP_PURE_DOMAIN},dc=${LLDAP_DC}"

  authelia-postgres:
    image: postgres
    container_name: ${APP_NAME}-authelia-postgres
    volumes:
      - ./docker/volumes/authelia/postgres:/var/lib/mysql
    networks:
      - TraefikNetwork
    expose:
      - 5432
    restart: unless-stopped
    environment:
      - POSTGRES_DATABASE=authelia
      - POSTGRES_USER=authelia
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TZ=CET

  redis:
    image: redis:alpine
    container_name: ${APP_NAME}-redis
    volumes:
      - ./docker/volumes/redis:/data
    networks:
      - TraefikNetwork
    expose:
      - 6379
    restart: unless-stopped
    environment:
      - TZ=CET

  backend:
    pid: host
    container_name: ${APP_NAME}-backend
    depends_on:
      authelia:
        condition: service_healthy
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - AUTH_DOMAIN=${AUTH_DOMAIN}
      - OIDC_CLIENT_ID=${OIDC_CLIENT_ID}
      - MONGO_URI=mongodb://${DB_USERNAME}:${DB_PASSWORD}@mongodb:27017/public?authSource=public
    networks:
        - TraefikNetwork
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.${APP_NAME}-backend.rule=Host(`${APP_DOMAIN}`) && PathPrefix(`/api`)'
      - 'traefik.http.routers.${APP_NAME}-backend.entrypoints=${TRAEFIK_ENTRYPOINT}'
      - 'traefik.http.routers.${APP_NAME}-backend.tls=true'
      - 'traefik.http.routers.${APP_NAME}-backend.tls.certresolver=${TRAEFIK_CERT_RESOLVER}'
      - 'traefik.http.routers.${APP_NAME}-backend.middlewares=authelia@docker'
      - "traefik.http.routers.${APP_NAME}-backend.middlewares=appStripPrefix"
      - "traefik.http.middlewares.appStripPrefix.stripprefix.prefixes=/api"
    restart: always

  mongodb:
    image: mongo:latest
    container_name: ${APP_NAME}-mongodb
    restart: always
    expose:
      - 27017
    networks:
      - TraefikNetwork
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    volumes:
      - ./docker/volumes/database:/data/db
      - ./docker/scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  frontend:
    container_name: ${APP_NAME}-frontend
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - BASE_URL=${FRONTEND_BASE_URL}
        - API_URL=${FRONTEND_API_URL}
        - AUTH_URL=${FRONTEND_AUTH_URL}
        - CLIENT_ID=${OIDC_CLIENT_ID}
    networks:
      - TraefikNetwork
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.${APP_NAME}-frontend.rule=Host(`${APP_DOMAIN}`)'
      - 'traefik.http.routers.${APP_NAME}-frontend.entrypoints=${TRAEFIK_ENTRYPOINT}'
      - 'traefik.http.routers.${APP_NAME}-frontend.tls=true'
      - 'traefik.http.routers.${APP_NAME}-frontend.tls.certresolver=${TRAEFIK_CERT_RESOLVER}'


networks:
  TraefikNetwork:
    external: true
    name: ${TRAEFIK_NETWORK}